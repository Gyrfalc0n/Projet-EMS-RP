#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Apr 05, 2021 10:11:31 PM CEST  platform: Windows NT
#    Apr 10, 2021 06:06:50 PM CEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def set_Tk_var():
    global conscience
    conscience = tk.IntVar()
    global respire
    respire = tk.IntVar()
    global pup_taille
    pup_taille = tk.IntVar()
    global pup_react
    pup_react = tk.IntVar()
    global pup_sym
    pup_sym = tk.IntVar()
    global espace
    espace = tk.IntVar()
    global temps
    temps = tk.IntVar()
    global inter
    inter = tk.IntVar()

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def envoyer():
    print('projet_support.envoyer')
    sys.stdout.flush()

def envoyer_log():
    print('projet_support.envoyer_log')
    sys.stdout.flush()

def fc():
    print('projet_support.fc')
    sys.stdout.flush()

def fr():
    print('projet_support.fr')
    sys.stdout.flush()

def new():
    print('projet_support.new')
    sys.stdout.flush()

def option1():
    print('projet_support.option1')
    sys.stdout.flush()

def option10():
    print('projet_support.option10')
    sys.stdout.flush()

def option2():
    print('projet_support.option2')
    sys.stdout.flush()

def option3():
    print('projet_support.option3')
    sys.stdout.flush()

def option4():
    print('projet_support.option4')
    sys.stdout.flush()

def option5():
    print('projet_support.option5')
    sys.stdout.flush()

def option6():
    print('projet_support.option6')
    sys.stdout.flush()

def option7():
    print('projet_support.option7')
    sys.stdout.flush()

def option8():
    print('projet_support.option8')
    sys.stdout.flush()

def option9():
    print('projet_support.option9')
    sys.stdout.flush()

def sat():
    print('projet_support.sat')
    sys.stdout.flush()

def tad():
    print('projet_support.tad')
    sys.stdout.flush()

def tag():
    print('projet_support.tag')
    sys.stdout.flush()

def trc():
    print('projet_support.trc')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import projet
    projet.vp_start_gui()





